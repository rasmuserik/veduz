(do
  (class
    AST
    (fn
      __init__
      (arg self)
      (arg type)
      (arg (splat children))
      (.__setattr__ self "type" type)
      (if
        (and children (.__call__ isinstance (.__getitem__ children 0) dict))
        (do
          (.__setattr__ self "annotations" (.__getitem__ children 0))
          (.__setattr__
            self
            "children"
            (.__getitem__ children (.__call__ slice 1 None None))))
        (do
          (.__setattr__ self "annotations" (.__dict))
          (.__setattr__ self "children" children)))))
  (fn
    fib
    (arg n)
    (if (.__le__ n 1) (return n))
    (return
      (.__add__ (.__call__ fib (.__sub__ n 1)) (.__call__ fib (.__sub__ n 2)))))
  (.__call__ print (.__call__ fib 32)))